""" terms=int(input("enter how many terms"))
first,second=0,1
count=0
if terms<1:
 print("invalid")
elif terms==1:
 print("fibonacci series is upto : ",terms,"terms")
 print(first)
else :
 print("\nfibonacci series is upto : ",terms,"terms")
 while count<terms:
 print(first)
 next=first+second
 first=second
 second=next
 count+=1
 """
num=int(input("Enter the number to check"))
divisor_found=False
if num==1:
 print(num,"not prime")
elif num > 1:
 for divisor in range(2,num):
 if (num % divisor)==0:
 divisor_found=True
 break
 
 if divisor_found:
 print(num ,"is not a prime number")
 else:
 print(num ,"is a prime number")



theory:
Python For Loops
A for loop is used for iterating over a sequence (that is either a list, a tuple, a dictionary, a set, or a string).

This is less like the for keyword in other programming languages, and works more like an iterator method as found in other object-orientated programming languages.

With the for loop we can execute a set of statements, once for each item in a list, tuple, set etc.

ExampleGet your own Python Server
Print each fruit in a fruit list:

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)
The for loop does not require an indexing variable to set beforehand.
